# EDA on Retail Sales Data

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
%matplotlib inline
import seaborn as sns
df=pd.read_excel('/content/Sales Data.xlsx')
df.shape
df.head()
df.info()
df.drop(['Status', 'unnamed1'],axis=1, inplace=True)
pd.isnull(df).sum()
df.dropna(inplace=True)
df['Amount']=df['Amount'].astype('int')
df['Amount'].dtypes
df.columns
df.rename(columns={'Marital_Status':'Civil_Status'})
df.describe()
df[['Age','Orders','Amount']].describe()
#Gender vs Count plot
ax=sns.countplot(x='Gender', data=df, hue='Gender')
for bars in ax.containers:
  ax.bar_label(bars)
#Gender vs Total Amount
sales_gender=df.groupby(['Gender'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False)
sns.barplot(x='Gender', y='Amount',data=sales_gender, hue='Gender')
 #Age Group vs Count plot
 ax=sns.countplot(x='Age Group', hue='Gender', data=df)
 for bars in ax.containers:
  ax.bar_label(bars)
#Age Group vs Total Amount plot
sales_age=df.groupby(['Age Group'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False)
sns.barplot(x='Age Group', y='Amount',data=sales_age, palette = "Set1")
#State vs Orders plot
sales_state=df.groupby(['State'], as_index=False)['Orders'].sum().sort_values(by='Orders', ascending=False).head(10)
sns.set(rc={'figure.figsize':(15,5)})
sns.barplot(x='State', y='Orders',data=sales_state, palette = "Set1")
#State vs Total Amount plot
sales_state=df.groupby(['State'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False).head(10)
sns.set(rc={'figure.figsize':(15,5)})
sns.barplot(x='State', y='Amount',data=sales_state, palette = "Set1")
#Marital Status vs Count plot
ax=sns.countplot(x='Marital_Status', data=df, hue='Gender')
for bars in ax.containers:
  ax.bar_label(bars)
#Marital Status vs Amount plot
sales_state=df.groupby(['Marital_Status','Gender'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False)
sns.set(rc={'figure.figsize':(6,5)})
sns.barplot(data = sales_state,x='Marital_Status', y='Amount', hue='Gender')
#Occupation vs Count
sns.set(rc={'figure.figsize':(20,5)})
ax = sns.countplot(x = 'Occupation',data = df, palette = "Set1")
for bars in ax.containers:
    ax.bar_label(bars)
sns.histplot(data=df, x="Occupation",bins=30)
#Occupation vs Amount
sales_state = df.groupby(['Occupation'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False)
sns.set(rc={'figure.figsize':(20,5)})
sns.barplot(x = 'Occupation',y= 'Amount',data = sales_state, palette = "Set1")
#Product Category vs Count
sns.set(rc={'figure.figsize':(20,5)})
ax = sns.countplot(data = df, x = 'Product_Category', palette = "Set2")
for bars in ax.containers:
    ax.bar_label(bars)
#Product Category vs Amount
sales_state = df.groupby(['Product_Category'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False).head(10)
sns.set(rc={'figure.figsize':(20,5)})
sns.barplot( x = 'Product_Category',y= 'Amount', data = sales_state,palette = "Set2")
#Product Id vs Orders
sales_state = df.groupby(['Product_ID'], as_index=False)['Orders'].sum().sort_values(by='Orders', ascending=False).head(10)
sns.set(rc={'figure.figsize':(20,5)})
sns.barplot(x = 'Product_ID',y= 'Orders', data = sales_state,palette = "Set2" )
#Top 10 most sold products
fig1, ax1 = plt.subplots(figsize=(12,7))
df.groupby('Product_ID')['Orders'].sum().nlargest(10).sort_values(ascending=False).plot(kind='bar')
numerical_data = df.select_dtypes(include=[np.number])
correlation_matrix = numerical_data.corr()
print(correlation_matrix)
plt.figure(figsize=(12, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt='.2f')
plt.title('Correlation Heatmap of Numerical Values')
plt.show()

